<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

    <mvc:annotation-driven></mvc:annotation-driven>
    <context:component-scan base-package="com.david.study"/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <task:annotation-driven />
    <!-- 统一的视图管理 controller 结果映射到 html-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="suffix" value=".jsp"></property>
        <property name="prefix" value="/WEB-INF/"></property>
    </bean>
    <!--统一的异常管理 -->
    <!--<bean class="org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver"></bean>-->

    <!-- 配置数据源 使用的是Druid数据源 -->
    <bean destroy-method="close" init-method="init" class="com.alibaba.druid.pool.DruidDataSource" name="dataSource">
        <property name="url" value="jdbc:mysql://10.253.76.49:3306/zeus_scm?useUnicode=true&amp;characterEncoding=utf-8"/>
        <property name="username" value="p2p"/>
        <property name="password" value="p2pA!123"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0"/>
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="33"/>
        <!-- 用来检测有效sql -->
        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000"/>
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800"/>
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true"/>
        <!-- 监控数据库 -->
        <property name="filters" value="mergeStat"/>

    </bean>
    <!-- sqlSessionFactory -->
         <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
             <!-- 数据库连接池 -->
             <property name="dataSource" ref="dataSource" />
             <!-- 加载mybatis的全局配置文件 -->
             <property name="configLocation" value="classpath:sqlMapConfig.xml" />
             <!-- mapper.xml文件-->
             <property name="mapperLocations" value="classpath:mybatis/*.xml"/>
         </bean>
        <!-- mapperInterface扫描器 -->
         <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
             <!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 -->
             <property name="basePackage" value="com.david.study.maven.dao"></property>
             <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
         </bean>
</beans>